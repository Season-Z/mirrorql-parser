// Generated from antlr/MirrorQL.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class MirrorQLLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly AND = 20;
	public static readonly OR = 21;
	public static readonly NOT = 22;
	public static readonly ADD = 23;
	public static readonly MINUS = 24;
	public static readonly MUL = 25;
	public static readonly CLASS = 26;
	public static readonly DOT = 27;
	public static readonly EXISTS = 28;
	public static readonly FORALL = 29;
	public static readonly INSTANCEOF = 30;
	public static readonly FUNCTION = 31;
	public static readonly FOR = 32;
	public static readonly IF = 33;
	public static readonly ELSE = 34;
	public static readonly IMPL = 35;
	public static readonly SELF = 36;
	public static readonly SUPER = 37;
	public static readonly PACKAGE = 38;
	public static readonly TRAIT = 39;
	public static readonly LET = 40;
	public static readonly MOD = 41;
	public static readonly EXTENDS = 42;
	public static readonly SEMICOLON = 43;
	public static readonly IMPL_OP = 44;
	public static readonly YES = 45;
	public static readonly NO = 46;
	public static readonly OBRACE = 47;
	public static readonly CBRACE = 48;
	public static readonly COUNT = 49;
	public static readonly MIN = 50;
	public static readonly MAX = 51;
	public static readonly ENUM = 52;
	public static readonly FROM = 53;
	public static readonly WHERE = 54;
	public static readonly SELECT = 55;
	public static readonly RECORD = 56;
	public static readonly IN = 57;
	public static readonly ID = 58;
	public static readonly INT = 59;
	public static readonly FLOAT = 60;
	public static readonly STRING = 61;
	public static readonly WS = 62;
	public static readonly COMMENT = 63;
	public static readonly LINE_COMMENT = 64;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "','", 
                                                            "'['", "']'", 
                                                            "'::'", "'->'", 
                                                            "'('", "')'", 
                                                            "'()'", "'use'", 
                                                            "'as'", "':'", 
                                                            "'='", "'|'", 
                                                            "'<='", "'>='", 
                                                            "'>'", "'<'", 
                                                            "'=='", "'!='", 
                                                            "'and'", "'or'", 
                                                            "'not'", "'+'", 
                                                            "'-'", "'*'", 
                                                            "'class'", "'.'", 
                                                            "'exists'", 
                                                            "'forall'", 
                                                            "'instanceof'", 
                                                            "'fn'", "'for'", 
                                                            "'if'", "'else'", 
                                                            "'impl'", "'self'", 
                                                            "'super'", "'package'", 
                                                            "'trait'", "'let'", 
                                                            "'mod'", "'extends'", 
                                                            "';'", "'<:'", 
                                                            "'yes'", "'no'", 
                                                            "'{'", "'}'", 
                                                            "'count'", "'min'", 
                                                            "'max'", "'enum'", 
                                                            "'from'", "'where'", 
                                                            "'select'", 
                                                            "'record'", 
                                                            "'in'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             "AND", "OR", 
                                                             "NOT", "ADD", 
                                                             "MINUS", "MUL", 
                                                             "CLASS", "DOT", 
                                                             "EXISTS", "FORALL", 
                                                             "INSTANCEOF", 
                                                             "FUNCTION", 
                                                             "FOR", "IF", 
                                                             "ELSE", "IMPL", 
                                                             "SELF", "SUPER", 
                                                             "PACKAGE", 
                                                             "TRAIT", "LET", 
                                                             "MOD", "EXTENDS", 
                                                             "SEMICOLON", 
                                                             "IMPL_OP", 
                                                             "YES", "NO", 
                                                             "OBRACE", "CBRACE", 
                                                             "COUNT", "MIN", 
                                                             "MAX", "ENUM", 
                                                             "FROM", "WHERE", 
                                                             "SELECT", "RECORD", 
                                                             "IN", "ID", 
                                                             "INT", "FLOAT", 
                                                             "STRING", "WS", 
                                                             "COMMENT", 
                                                             "LINE_COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "AND", "OR", "NOT", "ADD", "MINUS", "MUL", "CLASS", 
		"DOT", "EXISTS", "FORALL", "INSTANCEOF", "FUNCTION", "FOR", "IF", "ELSE", 
		"IMPL", "SELF", "SUPER", "PACKAGE", "TRAIT", "LET", "MOD", "EXTENDS", 
		"SEMICOLON", "IMPL_OP", "YES", "NO", "OBRACE", "CBRACE", "COUNT", "MIN", 
		"MAX", "ENUM", "FROM", "WHERE", "SELECT", "RECORD", "IN", "ID", "INT", 
		"FLOAT", "STRING", "WS", "COMMENT", "LINE_COMMENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, MirrorQLLexer._ATN, MirrorQLLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "MirrorQL.g4"; }

	public get literalNames(): (string | null)[] { return MirrorQLLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return MirrorQLLexer.symbolicNames; }
	public get ruleNames(): string[] { return MirrorQLLexer.ruleNames; }

	public get serializedATN(): number[] { return MirrorQLLexer._serializedATN; }

	public get channelNames(): string[] { return MirrorQLLexer.channelNames; }

	public get modeNames(): string[] { return MirrorQLLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,64,427,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,
	3,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,
	10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,16,
	1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,
	21,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,25,1,25,
	1,25,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,
	28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,
	1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,
	34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,
	1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,
	38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,
	1,41,1,41,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,
	46,1,46,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,
	1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,53,1,
	53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,
	1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,57,1,57,5,57,354,8,57,10,57,12,57,
	357,9,57,1,58,1,58,1,58,5,58,362,8,58,10,58,12,58,365,9,58,3,58,367,8,58,
	1,59,1,59,1,59,5,59,372,8,59,10,59,12,59,375,9,59,3,59,377,8,59,1,59,1,
	59,4,59,381,8,59,11,59,12,59,382,1,60,1,60,1,60,1,60,5,60,389,8,60,10,60,
	12,60,392,9,60,1,60,1,60,1,61,4,61,397,8,61,11,61,12,61,398,1,61,1,61,1,
	62,1,62,1,62,1,62,5,62,407,8,62,10,62,12,62,410,9,62,1,62,1,62,1,62,1,62,
	1,62,1,63,1,63,1,63,1,63,5,63,421,8,63,10,63,12,63,424,9,63,1,63,1,63,1,
	408,0,64,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
	27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,
	51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,
	75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,
	99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,
	60,121,61,123,62,125,63,127,64,1,0,8,3,0,65,90,95,95,97,122,4,0,48,57,65,
	90,95,95,97,122,1,0,49,57,1,0,48,57,4,0,10,10,13,13,34,34,92,92,4,0,34,
	34,92,92,110,110,116,116,3,0,9,10,13,13,32,32,2,0,10,10,13,13,437,0,1,1,
	0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
	1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
	0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
	1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,
	0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,
	1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,
	0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
	1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,
	0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
	1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,
	0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,
	0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,1,129,1,0,0,0,3,131,1,0,0,
	0,5,133,1,0,0,0,7,135,1,0,0,0,9,138,1,0,0,0,11,141,1,0,0,0,13,143,1,0,0,
	0,15,145,1,0,0,0,17,148,1,0,0,0,19,152,1,0,0,0,21,155,1,0,0,0,23,157,1,
	0,0,0,25,159,1,0,0,0,27,161,1,0,0,0,29,164,1,0,0,0,31,167,1,0,0,0,33,169,
	1,0,0,0,35,171,1,0,0,0,37,174,1,0,0,0,39,177,1,0,0,0,41,181,1,0,0,0,43,
	184,1,0,0,0,45,188,1,0,0,0,47,190,1,0,0,0,49,192,1,0,0,0,51,194,1,0,0,0,
	53,200,1,0,0,0,55,202,1,0,0,0,57,209,1,0,0,0,59,216,1,0,0,0,61,227,1,0,
	0,0,63,230,1,0,0,0,65,234,1,0,0,0,67,237,1,0,0,0,69,242,1,0,0,0,71,247,
	1,0,0,0,73,252,1,0,0,0,75,258,1,0,0,0,77,266,1,0,0,0,79,272,1,0,0,0,81,
	276,1,0,0,0,83,280,1,0,0,0,85,288,1,0,0,0,87,290,1,0,0,0,89,293,1,0,0,0,
	91,297,1,0,0,0,93,300,1,0,0,0,95,302,1,0,0,0,97,304,1,0,0,0,99,310,1,0,
	0,0,101,314,1,0,0,0,103,318,1,0,0,0,105,323,1,0,0,0,107,328,1,0,0,0,109,
	334,1,0,0,0,111,341,1,0,0,0,113,348,1,0,0,0,115,351,1,0,0,0,117,366,1,0,
	0,0,119,376,1,0,0,0,121,384,1,0,0,0,123,396,1,0,0,0,125,402,1,0,0,0,127,
	416,1,0,0,0,129,130,5,44,0,0,130,2,1,0,0,0,131,132,5,91,0,0,132,4,1,0,0,
	0,133,134,5,93,0,0,134,6,1,0,0,0,135,136,5,58,0,0,136,137,5,58,0,0,137,
	8,1,0,0,0,138,139,5,45,0,0,139,140,5,62,0,0,140,10,1,0,0,0,141,142,5,40,
	0,0,142,12,1,0,0,0,143,144,5,41,0,0,144,14,1,0,0,0,145,146,5,40,0,0,146,
	147,5,41,0,0,147,16,1,0,0,0,148,149,5,117,0,0,149,150,5,115,0,0,150,151,
	5,101,0,0,151,18,1,0,0,0,152,153,5,97,0,0,153,154,5,115,0,0,154,20,1,0,
	0,0,155,156,5,58,0,0,156,22,1,0,0,0,157,158,5,61,0,0,158,24,1,0,0,0,159,
	160,5,124,0,0,160,26,1,0,0,0,161,162,5,60,0,0,162,163,5,61,0,0,163,28,1,
	0,0,0,164,165,5,62,0,0,165,166,5,61,0,0,166,30,1,0,0,0,167,168,5,62,0,0,
	168,32,1,0,0,0,169,170,5,60,0,0,170,34,1,0,0,0,171,172,5,61,0,0,172,173,
	5,61,0,0,173,36,1,0,0,0,174,175,5,33,0,0,175,176,5,61,0,0,176,38,1,0,0,
	0,177,178,5,97,0,0,178,179,5,110,0,0,179,180,5,100,0,0,180,40,1,0,0,0,181,
	182,5,111,0,0,182,183,5,114,0,0,183,42,1,0,0,0,184,185,5,110,0,0,185,186,
	5,111,0,0,186,187,5,116,0,0,187,44,1,0,0,0,188,189,5,43,0,0,189,46,1,0,
	0,0,190,191,5,45,0,0,191,48,1,0,0,0,192,193,5,42,0,0,193,50,1,0,0,0,194,
	195,5,99,0,0,195,196,5,108,0,0,196,197,5,97,0,0,197,198,5,115,0,0,198,199,
	5,115,0,0,199,52,1,0,0,0,200,201,5,46,0,0,201,54,1,0,0,0,202,203,5,101,
	0,0,203,204,5,120,0,0,204,205,5,105,0,0,205,206,5,115,0,0,206,207,5,116,
	0,0,207,208,5,115,0,0,208,56,1,0,0,0,209,210,5,102,0,0,210,211,5,111,0,
	0,211,212,5,114,0,0,212,213,5,97,0,0,213,214,5,108,0,0,214,215,5,108,0,
	0,215,58,1,0,0,0,216,217,5,105,0,0,217,218,5,110,0,0,218,219,5,115,0,0,
	219,220,5,116,0,0,220,221,5,97,0,0,221,222,5,110,0,0,222,223,5,99,0,0,223,
	224,5,101,0,0,224,225,5,111,0,0,225,226,5,102,0,0,226,60,1,0,0,0,227,228,
	5,102,0,0,228,229,5,110,0,0,229,62,1,0,0,0,230,231,5,102,0,0,231,232,5,
	111,0,0,232,233,5,114,0,0,233,64,1,0,0,0,234,235,5,105,0,0,235,236,5,102,
	0,0,236,66,1,0,0,0,237,238,5,101,0,0,238,239,5,108,0,0,239,240,5,115,0,
	0,240,241,5,101,0,0,241,68,1,0,0,0,242,243,5,105,0,0,243,244,5,109,0,0,
	244,245,5,112,0,0,245,246,5,108,0,0,246,70,1,0,0,0,247,248,5,115,0,0,248,
	249,5,101,0,0,249,250,5,108,0,0,250,251,5,102,0,0,251,72,1,0,0,0,252,253,
	5,115,0,0,253,254,5,117,0,0,254,255,5,112,0,0,255,256,5,101,0,0,256,257,
	5,114,0,0,257,74,1,0,0,0,258,259,5,112,0,0,259,260,5,97,0,0,260,261,5,99,
	0,0,261,262,5,107,0,0,262,263,5,97,0,0,263,264,5,103,0,0,264,265,5,101,
	0,0,265,76,1,0,0,0,266,267,5,116,0,0,267,268,5,114,0,0,268,269,5,97,0,0,
	269,270,5,105,0,0,270,271,5,116,0,0,271,78,1,0,0,0,272,273,5,108,0,0,273,
	274,5,101,0,0,274,275,5,116,0,0,275,80,1,0,0,0,276,277,5,109,0,0,277,278,
	5,111,0,0,278,279,5,100,0,0,279,82,1,0,0,0,280,281,5,101,0,0,281,282,5,
	120,0,0,282,283,5,116,0,0,283,284,5,101,0,0,284,285,5,110,0,0,285,286,5,
	100,0,0,286,287,5,115,0,0,287,84,1,0,0,0,288,289,5,59,0,0,289,86,1,0,0,
	0,290,291,5,60,0,0,291,292,5,58,0,0,292,88,1,0,0,0,293,294,5,121,0,0,294,
	295,5,101,0,0,295,296,5,115,0,0,296,90,1,0,0,0,297,298,5,110,0,0,298,299,
	5,111,0,0,299,92,1,0,0,0,300,301,5,123,0,0,301,94,1,0,0,0,302,303,5,125,
	0,0,303,96,1,0,0,0,304,305,5,99,0,0,305,306,5,111,0,0,306,307,5,117,0,0,
	307,308,5,110,0,0,308,309,5,116,0,0,309,98,1,0,0,0,310,311,5,109,0,0,311,
	312,5,105,0,0,312,313,5,110,0,0,313,100,1,0,0,0,314,315,5,109,0,0,315,316,
	5,97,0,0,316,317,5,120,0,0,317,102,1,0,0,0,318,319,5,101,0,0,319,320,5,
	110,0,0,320,321,5,117,0,0,321,322,5,109,0,0,322,104,1,0,0,0,323,324,5,102,
	0,0,324,325,5,114,0,0,325,326,5,111,0,0,326,327,5,109,0,0,327,106,1,0,0,
	0,328,329,5,119,0,0,329,330,5,104,0,0,330,331,5,101,0,0,331,332,5,114,0,
	0,332,333,5,101,0,0,333,108,1,0,0,0,334,335,5,115,0,0,335,336,5,101,0,0,
	336,337,5,108,0,0,337,338,5,101,0,0,338,339,5,99,0,0,339,340,5,116,0,0,
	340,110,1,0,0,0,341,342,5,114,0,0,342,343,5,101,0,0,343,344,5,99,0,0,344,
	345,5,111,0,0,345,346,5,114,0,0,346,347,5,100,0,0,347,112,1,0,0,0,348,349,
	5,105,0,0,349,350,5,110,0,0,350,114,1,0,0,0,351,355,7,0,0,0,352,354,7,1,
	0,0,353,352,1,0,0,0,354,357,1,0,0,0,355,353,1,0,0,0,355,356,1,0,0,0,356,
	116,1,0,0,0,357,355,1,0,0,0,358,367,5,48,0,0,359,363,7,2,0,0,360,362,7,
	3,0,0,361,360,1,0,0,0,362,365,1,0,0,0,363,361,1,0,0,0,363,364,1,0,0,0,364,
	367,1,0,0,0,365,363,1,0,0,0,366,358,1,0,0,0,366,359,1,0,0,0,367,118,1,0,
	0,0,368,377,5,48,0,0,369,373,7,2,0,0,370,372,7,3,0,0,371,370,1,0,0,0,372,
	375,1,0,0,0,373,371,1,0,0,0,373,374,1,0,0,0,374,377,1,0,0,0,375,373,1,0,
	0,0,376,368,1,0,0,0,376,369,1,0,0,0,377,378,1,0,0,0,378,380,5,46,0,0,379,
	381,7,3,0,0,380,379,1,0,0,0,381,382,1,0,0,0,382,380,1,0,0,0,382,383,1,0,
	0,0,383,120,1,0,0,0,384,390,5,34,0,0,385,389,8,4,0,0,386,387,5,92,0,0,387,
	389,7,5,0,0,388,385,1,0,0,0,388,386,1,0,0,0,389,392,1,0,0,0,390,388,1,0,
	0,0,390,391,1,0,0,0,391,393,1,0,0,0,392,390,1,0,0,0,393,394,5,34,0,0,394,
	122,1,0,0,0,395,397,7,6,0,0,396,395,1,0,0,0,397,398,1,0,0,0,398,396,1,0,
	0,0,398,399,1,0,0,0,399,400,1,0,0,0,400,401,6,61,0,0,401,124,1,0,0,0,402,
	403,5,47,0,0,403,404,5,42,0,0,404,408,1,0,0,0,405,407,9,0,0,0,406,405,1,
	0,0,0,407,410,1,0,0,0,408,409,1,0,0,0,408,406,1,0,0,0,409,411,1,0,0,0,410,
	408,1,0,0,0,411,412,5,42,0,0,412,413,5,47,0,0,413,414,1,0,0,0,414,415,6,
	62,1,0,415,126,1,0,0,0,416,417,5,47,0,0,417,418,5,47,0,0,418,422,1,0,0,
	0,419,421,8,7,0,0,420,419,1,0,0,0,421,424,1,0,0,0,422,420,1,0,0,0,422,423,
	1,0,0,0,423,425,1,0,0,0,424,422,1,0,0,0,425,426,6,63,1,0,426,128,1,0,0,
	0,12,0,355,363,366,373,376,382,388,390,398,408,422,2,6,0,0,0,1,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!MirrorQLLexer.__ATN) {
			MirrorQLLexer.__ATN = new ATNDeserializer().deserialize(MirrorQLLexer._serializedATN);
		}

		return MirrorQLLexer.__ATN;
	}


	static DecisionsToDFA = MirrorQLLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}